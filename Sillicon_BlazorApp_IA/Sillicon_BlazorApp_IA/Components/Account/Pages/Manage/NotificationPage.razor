@page "/notifications"
@attribute [Authorize]

<PageTitle>notifications</PageTitle>

<section id="notifications">
    <div class="container">
        <MenuPartial User="UserClient"/>
        <div class="form-title">
            <h2>Notifications</h2>
            <NotificationsFormPartial User="User" Form="Form" Theme="Theme" />
        </div>
    </div>
</section>

@inject IHttpContextAccessor hca

@code {

    [CascadingParameter]
    private HttpContext? Context { get; set; } = default!;

    [SupplyParameterFromForm(FormName = "form")]
    private SubscribeForm Form { get; set; } = new();

    private ApplicationUser? User;
    private ClientUserModel UserClient { get; set; } = new();
    public bool Theme { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if(hca != null)
            Theme = CheckDarkmodeCookie();

        User = await _userManager.GetUserAsync(Context!.User);
        if (User != null)
        {
            AutoMapper.MapClientUser(UserClient,User);

            if (User.Email != null)
            {
                Form.Email = User.Email;
                Form!.Subscribe = await CheckSubscription();
            }
        }    
    }

    private bool CheckDarkmodeCookie()
    {
        var HasCookie = hca.HttpContext!.Request.Cookies.ContainsKey("darkmode");

        if (HasCookie)
            return true;
        else
            return false;
    }

    private async Task<bool> CheckSubscription()
    {
        if (User != null && User.Email != null)
        {                        
            var request = new HttpRequestMessage(HttpMethod.Post, "https://newsletterprovider-bmfl.azurewebsites.net/api/getsubscriber?code=tPCFhF1FQuVYEQYn83tYTYUyYadZjTh6C2dhPSRKUFhLAzFuqRMTVw%3D%3D");
            var json = JsonConvert.SerializeObject(new SubscribeModel { Email = User.Email });
            var content = new StringContent(json, Encoding.UTF8, "application/json");
            request.Content = content;
            var response = await client.SendAsync(request);

            if (response.IsSuccessStatusCode)
                return true;
            else
                return false;
        }
        return false;
    }
}
