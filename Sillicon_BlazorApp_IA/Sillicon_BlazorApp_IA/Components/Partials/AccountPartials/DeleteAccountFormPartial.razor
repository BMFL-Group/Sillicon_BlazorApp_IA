
@if (!string.IsNullOrEmpty(StatusMsg))
{
    <div class="error-message">@StatusMsg</div>
}

<EditForm novalidate FormName="deleteForm" Model="DeleteForm" OnValidSubmit="DeleteAccount">
    <div id="form-delete" class="input-group">
        <div class="checkbox">
            <InputText id="delete" type="password" @bind-Value="DeleteForm.Delete" placeholder="Enter your password.." />
        </div>
    </div>
    <button type="submit" class="btn-theme">Delete</button>
</EditForm>

@code {

    [SupplyParameterFromForm]
    DeleteAccountFormModel DeleteForm { get; set; } = new();

    [CascadingParameter]
    private HttpContext? Context { get; set; } = default!;

    [SupplyParameterFromQuery]
    public string? StatusMsg { get; set; }

    private ApplicationUser? User;

    protected override async Task OnInitializedAsync()
    {
        User = await _userManager.GetUserAsync(Context!.User);
    }

    private async Task DeleteAccount()
    {
        if (Context != null && User != null && await _userManager.CheckPasswordAsync(User,DeleteForm.Delete))
        {      
            var result = await _userManager.DeleteAsync(User);
            if (result.Succeeded)
            {
                await _signInManager.SignOutAsync();
                navigationManager.NavigateTo("/Account/Login");
            }    
            else
            {
                StatusMsg = "Something went wrong, try again later..";
            }
        }
        else
        {
            StatusMsg = "Wrong password";
        }
    }
}



