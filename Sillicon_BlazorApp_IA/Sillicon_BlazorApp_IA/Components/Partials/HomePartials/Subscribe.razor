@rendermode InteractiveServer

<section id="@Model.Id" class="subscribe">
    <div class="container">
        <h1>@Model.Title</h1>
        <img class="blue-squiggle" src="@Model.Image.ImageUrl" alt="@Model.Image.AltText">

        <EditForm FormName="subscribeForm" Model="SubscribeForm" OnValidSubmit="OnValidSubmit" method="post" novalidate>
            <DataAnnotationsValidator />

            <div class="top-wrapper">
                <h5>@Model.Subheading</h5>

                <div class="grid-container">

                    <div class="checkbox-group">
                        <InputCheckbox id="DailyNewsletter" @bind-Value="@SubscribeForm.DailyNewsletter" />
                        <label for="DailyNewsletter">DailyNewsletter</label>
                    </div>
                    <div class="checkbox-group">
                        <InputCheckbox id="AdvertisingUpdates" @bind-Value="@SubscribeForm.AdvertisingUpdates" />
                        <label for="AdvertisingUpdates">AdvertisingUpdates</label>
                    </div>
                    <div class="checkbox-group">
                        <InputCheckbox id="WeekInReview" @bind-Value="@SubscribeForm.WeekInReview" />
                        <label for="WeekInReview">WeekInReview</label>
                    </div>
                    <div class="checkbox-group">
                        <InputCheckbox id="EventUpdates" @bind-Value="@SubscribeForm.EventUpdates" />
                        <label for="EventUpdates">EventUpdates</label>
                    </div>
                    <div class="checkbox-group">
                        <InputCheckbox id="StartupsWeekly" @bind-Value="@SubscribeForm.StartupsWeekly" />
                        <label for="StartupsWeekly">StartupsWeekly</label>
                    </div>
                    <div class="checkbox-group">
                        <InputCheckbox id="podcasts" @bind-Value="@SubscribeForm.Podcasts" />
                        <label for="podcasts">Podcasts</label>
                    </div>
                </div>
            </div>

            <div class="middle-wrapper">
                <div class="input-group">
                    @* <span asp-validation-for="@Model.Subscribe.Email"></span> *@
                    <ValidationMessage For="@(() => SubscribeForm.Email)" />
                    <InputText type="email" @bind-Value="@SubscribeForm.Email" placeholder="Enter your Email" />
                    <i class="fa-light fa-envelope"></i>
                </div>

                <button class="btn-theme" type="submit">Subscribe *</button>
            </div>

            <div class="bottom-wrapper">

                <span class="@(StatusMessage == standard ? "status-message" : StatusMessage == error ? "status-message error" : "status-message success")">
                    @StatusMessage
                </span>

            </div>

        </EditForm>
    </div>

</section>

@code {
    string success = "Thank you for subscribing!";
    string error = "Could not create subscription, please try again.";
    string standard = "* Yes, I agree to the terms & privacy policy";

    [SupplyParameterFromQuery]
    public string StatusMessage { get; set; } = "";

    [SupplyParameterFromForm]
    public SubscribeModel SubscribeForm { get; set; } = new();

    protected override void OnInitialized()
    {
        ResetStatusMessage();
    }

    private void ResetStatusMessage()
    {
        StatusMessage = standard;
    }

    private async Task OnValidSubmit()
    {
        try
        {
            //logic for saving to database.
            var result = await client.PostAsJsonAsync("myUrl", SubscribeForm);
            if (result.IsSuccessStatusCode)
            {
                StatusMessage = success;            
            }            
        }
        catch (Exception ex)
        {
            StatusMessage = error;
        }

        SubscribeForm = new();
        await Task.Delay(3000);
        ResetStatusMessage();
    }


    SubscribeViewModel Model = new()
        {
            Title = "Don't Want To Miss Anything?",
            Image = new() { ImageUrl = "./img/blue-squiggle.svg", AltText = "blue squiggle" },
            Subheading = "Sign Up For Newsletters"
        };
}
