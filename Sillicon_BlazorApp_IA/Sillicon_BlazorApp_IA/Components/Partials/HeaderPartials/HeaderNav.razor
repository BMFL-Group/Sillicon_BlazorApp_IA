@rendermode InteractiveServer

<div id="menu">
    <nav>
        <NavLink class="menu-link" href="/#overview">Overview</NavLink>
        <NavLink class="menu-link" href="/#features">Features</NavLink>
        <NavLink class="menu-link" href="/contact">Contact</NavLink>
        <AuthorizeView>
            <Authorized>
                <NavLink class="menu-link" href="/courses">Courses</NavLink>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

<div class="account-buttons">
    <AuthorizeView>
        <Authorized>
            <a class="user-logged-in" href="/Account/Manage"><img class="user-profile-pic" src="@User!.ProfileImageUrl" alt="Profile picture of user.FirstName user.LastName"></a>
        </Authorized>
        <NotAuthorized>
            <NavLink class="btn-gray" href="/Account/Login"><i class="fa-solid fa-arrow-right-to-bracket"></i><span>Sign in</span></NavLink>
            <NavLink class="btn-theme" href="/Account/Register"><i class="fa-solid fa-user"></i>Sign up</NavLink>
        </NotAuthorized>
    </AuthorizeView>
</div>

@inject IHttpContextAccessor hca

@code {

    [CascadingParameter]
    private ApplicationUser? User { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (hca != null)
        {
            var user = _dataContext.Users.FirstOrDefault(x => x.Email == hca.HttpContext!.User.Identity!.Name);
            if (user != null)
            {
                User = user;
            }
        }
    }
}