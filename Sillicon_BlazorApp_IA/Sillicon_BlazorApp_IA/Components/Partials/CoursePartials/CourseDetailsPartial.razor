@rendermode InteractiveServer

@if (course == null)
{
    <PageTitle>Silicon | loading course...</PageTitle>
    <p class="container">Loading...</p>
}
else
{
    <PageTitle>Silicon | @course.Title</PageTitle>

    <div class="bg-container-s-to-lg container-fluid" style="background-image: url(/img/courses/@course.ImageUri)"></div>

    <div class="top-container container">
        <div class="grid-container">
            <div class="button-wrapper">
                @if (course.BestSeller)
                {
                    <span class="best-seller">Best Seller</span>
                }
                <span class="digital">Digital</span>
            </div>

            <Breadcrumbs />

            <div class="title-wrapper">
                <h1>@course.Title</h1>
                <p>@course.Ingress</p>
            </div>

            <div class="ratings-wrapper">
                <span class="stars">
                    @{
                        int maxStars = Convert.ToInt32(Math.Round((course.RatingInPercentage) / 20.0, MidpointRounding.AwayFromZero)); // takes rating in percentage and splits by 20 (1/5) as max stars are 5.
                        maxStars = Math.Max(1, Math.Min(5, maxStars)); // Ensure maxStars is between 0 and 5
                    }
                    @foreach (var star in Enumerable.Range(1, maxStars)) // render out solid stars between 1 and 5.
                    {
                        <i class="fa-solid fa-star"></i>
                    }

                    @for (int i = (maxStars + 1); i <= 5; i++) // Renders reamaining how stars depending on the amount of solid stars.
                    {
                        <i class="fa-light fa-star"></i>
                    }

                </span>

                @{
                    double likesInK = Math.Max(0, (Math.Round(course.NumberOfLikes / 1000.0, 1)));
                    double reviewsInK = Math.Max(0, (Math.Round(course.NumberOfReviews / 1000.0, 1)));
                }

                <span class="course-details">@course.RatingInPercentage% (@reviewsInK K reviews)</span>
                <i class="fa-thin fa-pipe"></i>
                <i class="fa-regular fa-thumbs-up"></i>
                <span>@likesInK K likes</span>
                <i class="fa-thin fa-pipe"></i>
                <i class="fa-light fa-clock"></i>
                <span class="course-ingress">@course.LengthInHours hours</span>
            </div>

            <div class="author-wrapper">
                <img class="course-instructor-picture" src="/img/albert-flores-small-round.png" alt="">
                <div class="author-text">
                    <p class="by">Created By</p>
                    <p class="author">
                        @if (course.Authors != null)
                        {
                            int i = 0;
                            foreach (var author in course.Authors)
                            {
                                <span class="author">@author.Name</span>
                                i++;
                                if (course.Authors.Count() != i)
                                {
                                    <span> & </span>
                                }
                            }
                        }
                    </p>
                </div>
            </div>
        </div>
    </div>

    <div class="course-description container">
        <div class="grid-container">
            <div class="title-box">
                <h2>Course Description</h2>
                <p>
                    @if (course != null && course.Content != null && course.Content.Description != null)
                    {
                        @course.Content.Description
                    }
                </p>
            </div>

            <div class="what-you-learn-box">
                <h3>What you'll learn</h3>

                @{
                    if (course != null && course.Content != null && course.Content.Courseincludes != null && course.Content.Courseincludes.Count() > 0)
                    {
                        foreach (var bulletPoint in course.Content.Courseincludes)
                        {
                            <p><i class="fa-regular fa-circle-check"></i>@bulletPoint</p>
                        }
                    }
                }

            </div>

            <div class="course-includes-box">
                <h3>This course includes:</h3>

                <p><img src="/img/screen.svg" alt="">@course.Content.Courseincludes[0]</p>
                <p><img src="/img/file.svg" alt="">@course.Content.Courseincludes[1]</p>
                <p><img src="/img/download.svg" alt="">@course.Content.Courseincludes[2]s</p>
                <p><img src="/img/infinity.svg" alt="">@course.Content.Courseincludes[3]</p>
                <p><img src="/img/trophy.svg" alt="">@course.Content.Courseincludes[4]</p>

                @if (course.DiscountPrice >= 1)
                {
                    <span class="discount-price">@course.Currency@course.DiscountPrice.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)</span>
                    <span class="price strikethrough">@course.Currency@course.Price.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)</span>
                }
                else
                {
                    <span class="price">@course.Currency@course.Price.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)</span>

                }

                <form class="join-course-wrapper" method="post" asp-action="Bookmarkcourse" asp-controller="Account" asp-route-courseId="@course.Id">

                    <button class="btn-theme" type="submit">join Course</button>

                    @* @if (Model.SavedCourses.Count() > 0 && Model.SavedCourses != null)
                {
                var isSignedUp = false;

                @foreach (var savedCourse in Model.SavedCourses)
                {
                if (course.Id == savedCourse.CourseId)
                {
                // As soon as a match is found the lop breaks and prints the HTML inside "if(isSignedUp)". If no matches are found it goes to the else statement.
                isSignedUp = true;
                break;
                }
                }

                if (isSignedUp)
                {
                <button class="btn-delete-all" type="submit">Leave Course</button>
                <div class="btn">You are signed up <i class="fa-solid fa-thumbs-up"></i></div>
                }
                else
                {
                <button class="btn-theme" type="submit">Join Course</button>
                }
                }
                else
                {
                <button class="btn-theme" type="submit">join Course</button>
                } *@

                </form>

            </div>

        </div>
    </div>

    <div class="program-details container">
        <h2>Program Details</h2>
        <div class="grid-container">
            <div class="progression-boxes">

                @if (course != null && course.Content != null && course.Content.ProgramDetails != null)
                {
                    int progressBoxes = 0;
                    @foreach (var progressBox in course.Content.ProgramDetails)
                    {
                        progressBoxes++;
                        if (progressBoxes <= Math.Abs(course.Content.ProgramDetails.Count() - 1))
                        {
                            <div class="progress-box">
                                <div class="outer-circle">
                                    <div class="inner-circle"><span class="number">@progressBox.Id</span></div>
                                    <div class="connector-line"></div>
                                </div>
                                <div class="text-box">
                                    <h3 class="progress-title">@progressBox.Title</h3>
                                    <p class="progress-description">
                                        @progressBox.Description[0]
                                    </p>
                                </div>
                            </div>
                        }
                        else if (progressBoxes == course.Content.ProgramDetails.Count())
                        {
                            <div class="progress-box">
                                <div class="outer-circle">
                                    <div class="inner-circle"><span class="number">@progressBox.Id</span></div>
                                    <div class="connector-line last-line"></div>
                                </div>
                                <div class="text-box">
                                    <h3 class="progress-title">@progressBox.Title</h3>
                                    <p class="progress-description">
                                        @progressBox.Description[0]
                                    </p>
                                </div>
                            </div>
                        }
                    }
                }



            </div>
            <div class="empty-container"></div>
        </div>
    </div>

    <div class="about-author-box container">
        <div class="grid-wrapper">
            <div class="image-wrapper"><img src="/img/albert-flores-lg.png" alt=""></div>
            <div class="bio-wrapper">
                <p class="sub-heading">Learn from the best</p>
                <h3 class="about-heading">
                    @if (course != null && course.Authors != null)
                    {
                        foreach (var author in course.Authors)
                        {
                            <span>@author.Name</span>
                        }
                    }
                </h3>
                <p class="text">
                    Dolor ipsum amet cursus quisque porta adipiscing. Lorem convallis malesuada sed maecenas. Ac
                    dui at vitae mauris in nullam porta sem. Quis pellentesque elementum ac bibendum. Nunc aliquam in
                    tortor facilisis. Vulputate eget risus, metus phasellus. Pellentesque faucibus amet, eleifend diam quam
                    condimentum convallis ultricies placerat. Duis habitasse placerat amet, odio pellentesque rhoncus,
                    feugiat at. Eget pellentesque tristique felis magna fringilla.
                </p>
                <div class="button-wrapper">
                    <button class="btn-gray subscribers"><i class="fa-brands fa-youtube"></i> 240K subscribers</button>
                    <button class="btn-gray followers"><i class="fa-brands fa-facebook"></i> 180K followers</button>
                    <img class="pattern" src="/img/pattern.svg" alt="">
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; } = null!;

    Course course = null!;

    protected override async Task OnInitializedAsync()
    {
        course = await GetOneCourse(Id);
    }

    public async Task<Course> GetOneCourse(string id)
    {
        try
        {
            var courseResponse = await _coursesService.GetOneCourseByIdAsync(id);
            if (courseResponse != null)
            {
                return courseResponse;
            }
        }
        catch (Exception ex)
        { /*logic for logging here*/ }
        return null!;
    }
}
