
<div class="courses">
    <div class="top-wrapper">
        <h1 class="title">Saved Items</h1>
 
        <button class="btn-delete-all" @onclick="HandleDeleteAll"><i class="fa-light fa-trash"></i> Delete all</button>
    </div>

    <div class="grid-container">
        @if (Courses != null && Courses.Count() > 0 && savedCourses != null && savedCourses.Count() > 0)
        {
            foreach (var course in Courses)
            {
                foreach (var savedCourse in savedCourses)
                {
                    if (savedCourse.CourseId == course.Id)
                    {
                        <CourseBoxPartial Course="@course" savedCourse="@savedCourse" UserId="@User.Id" />
                    }
                }
            }
        }
    </div>
</div>

@code {

    [CascadingParameter]
    private HttpContext? _context { get; set; } = default;

    private IEnumerable<Course> Courses { get; set; } = null!;
    private IEnumerable<SavedCoursesModel> savedCourses { get; set; } = null!;

    [Parameter]
    public ApplicationUser User { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        if (User != null)
        {
            var saveCoursesResponse = await _coursesService.GetSavedCoursesAsync(User.Id);
            if (saveCoursesResponse != null && saveCoursesResponse.Count() > 0)
            {
                savedCourses = saveCoursesResponse;
            }

            var coursesToFetchResponse = await _coursesService.GetAllCoursesAsync(string.Empty, string.Empty, 1, 9999);
            if (coursesToFetchResponse != null)
            {
                Courses = coursesToFetchResponse.Courses;
            }
        }    
    }

    private async Task HandleDeleteAll()
    {

    }
}
